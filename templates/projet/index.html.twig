{% extends 'base.html.twig' %}

{% block title %}Liste des Projets{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .chart-container {
            height: 400px;
            margin-bottom: 30px;
        }
        .chart-card {
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        .chart-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #eee;
            padding: 15px 20px;
        }
        .chart-title {
            margin: 0;
            font-size: 1.2rem;
            color: #333;
        }
        .badge {
            font-size: 0.85em;
            padding: 0.35em 0.65em;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container py-4">
    <h1 class="mb-4">Liste des Projets</h1>

    <!-- Section Graphique -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="chart-card card">
                <div class="chart-header card-header d-flex justify-content-between align-items-center">
                    <h2 class="chart-title mb-0">Comparaison Budget vs Dépenses</h2>
                    <small class="text-muted">Mise à jour automatique</small>
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="budgetChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tableau des projets -->
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3 class="mb-0">Détails des projets</h3>
                    <a href="{{ path('app_projet_new') }}" class="btn btn-success">
                        <i class="fas fa-plus"></i> Nouveau projet
                    </a>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Nom</th>
                                    <th>Statut</th>
                                    <th class="text-end">Budget (€)</th>
                                    <th class="text-end">Dépense (€)</th>
                                    <th class="text-end">Solde (€)</th>
                                    <th>Date Début</th>
                                    <th>Date Fin</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                            {% for projet in projets %}
                                <tr>
                                    <td>{{ projet.nom }}</td>
                                    <td>
                                        <span class="badge 
                                            {% if projet.statut == 'terminé' %}bg-success
                                            {% elseif projet.statut == 'en cours' %}bg-primary
                                            {% elseif projet.statut == 'suspendu' %}bg-warning text-dark
                                            {% else %}bg-secondary{% endif %}">
                                            {{ projet.statut|capitalize }}
                                        </span>
                                    </td>
                                   <td class="text-end">{{ projet.budget is not null ? projet.budget|format_currency('EUR') : 'N/A' }}</td>
<td class="text-end">{{ projet.depense is not null ? projet.depense|format_currency('EUR') : 'N/A' }}</td>
<td class="text-end fw-bold {{ ((projet.budget|default(0)) - (projet.depense|default(0))) < 0 ? 'text-danger' : 'text-success' }}">
    {{ ((projet.budget|default(0)) - (projet.depense|default(0)))|format_currency('EUR') }}
</td>
                                    <td>{{ projet.dateDebut ? projet.dateDebut|format_date('short') : '' }}</td>
                                    <td>{{ projet.dateFin ? projet.dateFin|format_date('short') : '' }}</td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            <a href="{{ path('app_projet_show', {'id': projet.id}) }}" class="btn btn-info" title="Voir">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a href="{{ path('app_projet_edit', {'id': projet.id}) }}" class="btn btn-warning" title="Modifier">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal{{ projet.id }}" title="Supprimer">
                                                <i class="fas fa-trash-alt"></i>
                                            </button>
                                        </div>
                                        <!-- Modal de suppression -->
                                        <div class="modal fade" id="deleteModal{{ projet.id }}" tabindex="-1" aria-hidden="true">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title">Confirmer la suppression</h5>
                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                    </div>
                                                    <div class="modal-body">
                                                        Êtes-vous sûr de vouloir supprimer le projet "{{ projet.nom }}" ?
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                                                        <form method="post" action="{{ path('app_projet_delete', {'id': projet.id}) }}">
                                                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ projet.id) }}">
                                                            <button type="submit" class="btn btn-danger">Supprimer</button>
                                                        </form>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            {% else %}
                                <tr>
                                    <td colspan="8" class="text-center">Aucun projet trouvé</td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Configuration du graphique
            const chartConfig = {
                type: 'bar',
                data: {
                    labels: {{ chartData.labels|json_encode|raw }},
                    datasets: [
                        {
                            label: 'Budget (€)',
                            data: {{ chartData.budgets|json_encode|raw }},
                            backgroundColor: 'rgba(54, 162, 235, 0.7)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1,
                            borderRadius: 4
                        },
                        {
                            label: 'Dépenses (€)',
                            data: {{ chartData.depenses|json_encode|raw }},
                            backgroundColor: 'rgba(255, 99, 132, 0.7)',
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 1,
                            borderRadius: 4
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            grid: { display: false }
                        },
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return new Intl.NumberFormat('fr-FR', { 
                                        style: 'currency', 
                                        currency: 'EUR',
                                        maximumFractionDigits: 0
                                    }).format(value);
                                }
                            }
                        }
                    },
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return context.dataset.label + ': ' + 
                                        new Intl.NumberFormat('fr-FR', { 
                                            style: 'currency', 
                                            currency: 'EUR'
                                        }).format(context.raw);
                                }
                            }
                        },
                        legend: {
                            position: 'top',
                            labels: { boxWidth: 12, padding: 20 }
                        },
                        datalabels: { display: false }
                    },
                    animation: {
                        duration: 1000,
                        easing: 'easeInOutQuad'
                    }
                },
                plugins: [ChartDataLabels]
            };

            // Initialisation du graphique
            const ctx = document.getElementById('budgetChart').getContext('2d');
            const budgetChart = new Chart(ctx, chartConfig);

            // Rafraîchissement automatique
            function refreshChart() {
                fetch('{{ path('app_projet_chart_data') }}')
                    .then(response => {
                        if (!response.ok) throw new Error('Erreur réseau');
                        return response.json();
                    })
                    .then(data => {
                        budgetChart.data.labels = data.labels;
                        budgetChart.data.datasets[0].data = data.budgets;
                        budgetChart.data.datasets[1].data = data.depenses;
                        budgetChart.update();
                    })
                    .catch(error => {
                        console.error('Erreur:', error);
                    });
            }

            // Rafraîchissement toutes les 30 secondes
            setInterval(refreshChart, 30000);

            // Gestion des tooltips Bootstrap
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>
{% endblock %}