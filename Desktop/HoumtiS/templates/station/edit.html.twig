document.addEventListener('DOMContentLoaded', function () {
    const form = document.querySelector('form');
    
    // EmpÃªcher la saisie de caractÃ¨res non autorisÃ©s directement pendant la frappe
    const nomStation = document.querySelector('input[name="station[nomStation]"]');
    if (nomStation) {
        nomStation.addEventListener('input', function(e) {
            // Regex pour n'autoriser que les lettres (y compris accents), espaces et tirets
            const regex = /^[a-zA-ZÃ€-Ã¿\s\-]+$/;
            
            // Si le caractÃ¨re saisi n'est pas autorisÃ©, on l'enlÃ¨ve
            if (!regex.test(this.value)) {
                // Conserver uniquement les caractÃ¨res autorisÃ©s
                this.value = this.value.replace(/[^a-zA-ZÃ€-Ã¿\s\-]/g, '');
                
                // Feedback visuel temporaire
                this.classList.add('border-danger');
                setTimeout(() => {
                    this.classList.remove('border-danger');
                }, 500);
            }
        });
    }
    
    // Validation Ã  la soumission du formulaire
    form.addEventListener('submit', function (event) {
        let isValid = true;
        
        // Validation du nom de la station
        if (nomStation) {
            // VÃ©rifier que le nom ne contient que des lettres, espaces et tirets
            const regex = /^[a-zA-ZÃ€-Ã¿\s\-]+$/;
            
            if (!nomStation.value || nomStation.value.trim().length < 3) {
                showError(nomStation, 'ðŸš« Le nom de la station doit contenir au moins 3 caractÃ¨res');
                isValid = false;
            } else if (!regex.test(nomStation.value)) {
                showError(nomStation, 'ðŸš« Le nom de la station ne doit contenir que des lettres, espaces et tirets');
                isValid = false;
            } else {
                clearError(nomStation);
            }
        }
        
        // Validation de la capacitÃ©
        const capacite = document.querySelector('input[name="station[capacite]"]');
        if (capacite) {
            if (!capacite.value || isNaN(capacite.value) || parseInt(capacite.value) <= 0) {
                showError(capacite, 'ðŸš« La capacitÃ© doit Ãªtre un nombre positif');
                isValid = false;
            } else {
                clearError(capacite);
            }
        }
        
        // Validation de la zone
        const zone = document.querySelector('input[name="station[zone]"]');
        if (zone) {
            if (!zone.value) {
                showError(zone, 'ðŸš« La zone est requise');
                isValid = false;
            } else {
                clearError(zone);
            }
        }
        
        if (!isValid) {
            event.preventDefault();
        }
    });
    
    function showError(input, message) {
        clearError(input);
        const errorDiv = document.createElement('div');
        errorDiv.className = 'invalid-feedback d-block mt-1';
        errorDiv.innerText = message;
        input.classList.add('is-invalid');
        input.parentNode.appendChild(errorDiv);
    }
    
    function clearError(input) {
        input.classList.remove('is-invalid');
        const errorDiv = input.parentNode.querySelector('.invalid-feedback');
        if (errorDiv) {
            errorDiv.remove();
        }
    }
});